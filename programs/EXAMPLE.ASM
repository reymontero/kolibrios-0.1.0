;
;   Пример программы для MenuetOS
;   озвучивает код нажатой клавиши ;)
;
;   Компилировать FASM'ом
;
;   См. также:
;     template.asm  -  пример простейшей программы (новый!)
;     paint.asm     -  примитивный графический редактор
;     rb.asm        -  контекстное меню рабочего стола
;     example2.asm  -  пример меню и дополнительных окон
;     example3.asm  -  пример меню, реализованного по-другому

use32                ; включить 32-битный режим ассемблера

  org    0x0         ; адресация с нуля

  db     'MENUET01'  ; 8-байтный идентификатор MenuetOS
  dd     0x01        ; версия заголовка (всегда 1)
  dd     START       ; адрес метки, с которой начинается выполнение программы
  dd     I_END       ; размер программы
  dd     0x100000    ; количество памяти
  dd     0x100000    ; адрес вершины стэка
  dd     0x0         ; адрес буфера для строки параметров (не используется)
  dd     0x0         ; зарезервировано

include 'macros.inc' ; уменьшает размер программы
                     ; и содержит полезные макросы


START:                  ; здесь начинается выполнение программы

red:                    ; перерисовать окно

    call draw_window    ; вызываем процедуру отрисовки окна

still:                  ; ГЛАВНЫЙ ЦИКЛ ПРОГРАММЫ

    mov  eax,10         ; функция 10 - ждать события
    int  0x40           ; вызываем систему

    cmp  eax,1          ; перерисовать окно ?
    je   red            ; если да - на метку red
    cmp  eax,2          ; нажата клавиша ?
    je   key            ; если да - на key
    cmp  eax,3          ; нажата кнопка ?
    je   button         ; если да - на button

    jmp  still          ; если другое событие - в начало цикла

  key:                  ; нажата клавиша на клавиатуре
    mov  eax,2          ; функция 2 - считать код символа
    int  0x40           ; вызов системы

    mov  [Music+1],ah   ;

; play music now
    mov  eax,55
    mov  ebx,eax
    mov  esi,Music
    int  0x40

    jmp  still          ; вернуться к началу цикла

  button:               ; нажата кнопка в окне программы
    mov  eax,17         ; 17 - получить идентификатор нажатой кнопки
    int  0x40           ; вызов системы

    cmp  ah,1           ; идентификатор == 1 ?
    jne  noclose        ; если нет - иди вперёд на noclose

    or   eax,-1         ; выход из программы
    int  0x40           ; вызов системы

  noclose:

    jmp  still          ; возвращаемся



Music:
  db  0x90
  db  0x30
  db  0x00



;   *********************************************
;   *******  ОПРЕДЕЛЕНИЕ И ОТРИСОВКА ОКНА *******
;   *********************************************

draw_window:


    mov  eax,12                    ; функция 12: сообщить ОС об отрисовке окна
    mov  ebx,1                     ; 1 - начинаем рисовать
    int  0x40

                                   ; СОЗДАЁМ ОКНО
    mov  eax,0                     ; функция 0 : определить и отрисовать окно
    mov  ebx,200*65536+200         ; [x старт] *65536 + [x размер]
    mov  ecx,200*65536+100         ; [y старт] *65536 + [y размер]
    mov  edx,0x02aabbcc            ; цвет рабочей области  RRGGBB,8->color gl
    mov  esi,0x805080d0            ; цвет полосы заголовка RRGGBB,8->color gl
    mov  edi,0x005080d0            ; цвет рамки            RRGGBB
    int  0x40

                                   ; ЗАГОЛОВОК ОКНА
    mov  eax,4                     ; функция 4 : написать в окне текст
    mov  ebx,8*65536+8             ; [x] *65536 + [y]
    mov  ecx,0x10ddeeff            ; шрифт 1 и цвет ( 0xF0RRGGBB )
    mov  edx,zagolovok             ; адрес строки
    mov  esi,zag_konets-zagolovok  ; и её длина
    int  0x40

    mov  eax,4
    mov  ebx,8 shl 16 + 30
    mov  ecx,0
    mov  edx,message
    mov  esi,msg_end-message
    int  0x40

                                   ; КНОПКА ЗАКРЫТИЯ ОКНА
    mov  eax,8                     ; функция 8 : определить и нарисовать кнопку
    mov  ebx,(200-19)*65536+12     ; [x старт] *65536 + [x размер]
    mov  ecx,5*65536+12            ; [y старт] *65536 + [y размер]
    mov  edx,1                     ; идентификатор кнопки - 1
    mov  esi,0x6688dd              ; цвет кнопки RRGGBB
    int  0x40

    mov  eax,12                    ; функция 12: сообщить ОС об отрисовке окна
    mov  ebx,2                     ; 2, закончили рисовать
    int  0x40

    ret                            ; выходим из процедуры


; Здесь находятся данные программы:

; интерфейс программы двуязычный - задайте язык в macros.inc
message:
if lang eq ru                      ; если язык = русский, то
     db 'Нажмите любую клавишу...'
else                               ; иначе
     db 'Press any key...'
end if                             ; конец ветвления
msg_end:

zagolovok:               ; строка заголовка
if lang eq ru
     db   'ПРОСТЕЙШАЯ ПРОГРАММА'
else
     db   'EXAMPLE APPLICATION'
end if
zag_konets:              ; и её конец

I_END: